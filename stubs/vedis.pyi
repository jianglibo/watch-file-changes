from typing import Dict, Set


class Vedis():

    def __init__(self, filename: str = ':mem:', open_database: bool = True) -> None: ...

    def set(self, key: str, value: str) -> None: ...

    def get(self, key: str) -> str: ...

    def hset(self, hash_key: str, key: str, value: str) -> None: ...

    def hsetnx(self, hash_key: str, key: str, value: str) -> None: ...

    def hgetall(self, hash_key: str) -> Dict[str, str]: ...

    def smembers(self, key: str) -> Set[str]: ...

    def hlen(self, hash_key: str) -> int: ...

    def scard(self, key: str) -> int: ...

    def close(self) -> None: ...

    def llen(self, key: str) -> int: ...

    def List(self, key: str): ...

    def Set(self, key: str): ...

    def lpush(self, list_name: str, value: str): ...

    def transaction(self): ...

    def __enter__(self): ...

    def commit(self): ...

    def __exit__(self, exc_type, exc_val, exc_tb): ...

    def Hash(self, name: str) -> Dict: ...

    def hget(self, hash_key: str, val_key: str) -> str: ...

    def lpop(self, list_key: str) -> str: ...

    def sadd(self, set_key: str, value: str) -> int: ...
    
    def incr(self, key: str) -> int: ...
    
    def hexists(self, hash_table: str, val_key: str) -> bool: ...

    def hdel(self, hash_table: str, val_key: str) -> int: ...
    
    def delete(self, key: str): ...
    
    def srem(self, set_name: str, value: str) -> int: ...
